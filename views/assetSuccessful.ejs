<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />

    <title>otnode.com</title>
    <meta content="" name="description" />
    <meta content="" name="keywords" />

    <!-- Favicons -->
    <link href="/image/favicon.png" rel="icon" />
    <link href="/image/apple-touch-icon.png" rel="apple-touch-icon" />

    <!-- Google Fonts -->
    <link
      href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
      rel="stylesheet"
    />

    <!-- Vendor CSS Files -->
    <link href="/vendor/aos/aos.css" rel="stylesheet" />
    <link href="/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet" />
    <link href="/vendor/boxicons/css/boxicons.min.css" rel="stylesheet" />
    <link href="/vendor/glightbox/css/glightbox.min.css" rel="stylesheet" />
    <link href="/vendor/remixicon/remixicon.css" rel="stylesheet" />
    <link href="/vendor/swiper/swiper-bundle.min.css" rel="stylesheet" />

    <!-- Template Main CSS File -->
    <link href="/public/stylesheets/style.css" rel="stylesheet" />
    <link rel="stylesheet" href="/stylesheets/style.css" type="text/css" />
    <link rel="stylesheet" href="/stylesheets/style.scss" type="text/css" />
    <link rel="stylesheet" href="/javascripts/main.js" type="text/css" />

    

    <!-- =======================================================
  * Template Name: OnePage - v4.7.0
  * Template URL: https://bootstrapmade.com/onepage-multipurpose-bootstrap-template/
  * Author: BootstrapMade.com
  * License: https://bootstrapmade.com/license/
  ======================================================== -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    let assetData;
    let action;
    let owner_address;
    let chain_id;

    assetData = `<%- JSON.stringify(locals.assetData) %>`
    action = `<%- JSON.stringify(locals.action) %>`
    ual = `<%- JSON.stringify(locals.ual) %>`
    owner_address = localStorage.getItem('owner_address');
    chain_id = localStorage.getItem('chain_id');

    //console.log(assetData)
  </script>
  </head>

  <body>
    <!-- ======= Header ======= -->
    <header style="background: none;">
      <div class="d-flex align-items-center justify-content-between" >
        <a href="/search" style="color: #6168ed;margin-left:2.5%;font-size:28px;font-family: OCR A Std, monospace;">otnode.com</a>
        <div class="form-group" style="margin-left: 80px;">
          <div class="input-group" style="white-space:nowrap;" id="searchbar">

          </div>
        </div>
        <a href="/search" class="logo" style="color: #6168ed"></a>
        <!--<h1 class="logo"><a href="img/Logo.jpg">Public DKG Beta</a></h1>-->
        <!-- Uncomment below if you prefer to use an image logo -->
        <a href="/search" class="logo" style="color: #6168ed"></a>

        <nav id="navbar" class="navbar">
          <ul>
            <li id="MM">

            </li>
            <li id="explore">

            </li>
          </ul>
        </nav>
        <!-- .navbar -->
      </div>
    </header>
    <html>
    <body>
    <!-- End Header -->
    <main id="main" style="background-color:#FFFFFF;">
        
        
      </main>
    <!-- End #main -->

    <!-- ======= Footer ======= -->
    <footer id="footer" style="position: fixed; bottom: 0; width: 100%">
      <div class="container d-md-flex py-4">

        </div>
      </div>
    </footer>
    <!-- End Footer -->

    <!-- Vendor JS Files -->
    <script src="vendor/purecounter/purecounter.js"></script>
    <script src="vendor/aos/aos.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!--<script src="vendor/glightbox/js/glightbox.min.js"></script>-->
    <script src="vendor/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="vendor/swiper/swiper-bundle.min.js"></script>
    <script src="vendor/php-email-form/validate.js"></script>

    <!-- Template Main JS File -->
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="/javascripts/main.js"></script>
    <script src="/javascripts/assetSuccessful.js"></script>
    <script>
      nav(owner_address, chain_id); 
      body(assetData,action,ual);
    </script>
    <script>
        const colors = ['#6168ED'];

        // Create a canvas element that covers the entire screen
        const canvas = document.createElement('canvas');
        canvas.style.position = 'fixed';
        canvas.style.top = '0';
        canvas.style.left = '0';
        canvas.style.width = '100%';
        canvas.style.height = '100%';
        canvas.style.zIndex = '999999';
        canvas.style.pointerEvents = 'none'; // Make the canvas ignore mouse events
        document.body.appendChild(canvas);

        // Set the canvas dimensions
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        // Create a context for the canvas
        const ctx = canvas.getContext('2d');

        // Create an array to hold the confetti particles
        const particles = [];

        // Define the particle class
        class Particle {
        constructor(x, y, width, height, color, speedX, speedY) {
            this.x = x;
            this.y = y;
            this.width = width;
            this.height = height;
            this.color = color;
            this.speedX = speedX;
            this.speedY = speedY;
        }

        // Update the particle's position
        update() {
            this.x += this.speedX;
            this.y += this.speedY;

            // If the particle goes off the screen, remove it from the particles array
            if (this.y > canvas.height) {
            particles.splice(particles.indexOf(this), 1);
            }
        }

        // Draw the particle on the canvas
        draw() {
            ctx.beginPath();
            ctx.rect(this.x, this.y, this.width, this.height);
            ctx.fillStyle = this.color;
            ctx.fill();
        }
        }

        // Create a function to create new particles
        function createParticles() {
        for (let i = 0; i < 50; i++) { // Increase number of particles
            const width = Math.random() * 10 + 5; // Decrease size of particles
            const height = Math.random() * 10 + 5; // Decrease size of particles
            const x = canvas.width / 2 - width / 2 + Math.random() * 40 - 20;
            const y = canvas.height - height;
            const color = colors[Math.floor(Math.random() * colors.length)];
            const speedX = Math.random() * 6 - 3;
            const speedY = Math.random() * -5 - 2;
            particles.push(new Particle(x, y, width, height, color, speedX, speedY));
        }
        }

        // Create the particles and start the animation loop
        createParticles();

        function animate() {
        // Clear the canvas
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        // Update and draw each particle
        particles.forEach((particle) => {
            particle.update();
            particle.draw();
        });

        // Create new particles if there are fewer than 50 on the screen
        if (particles.length < 50) { // Increase number of particles
            createParticles();
        }

        // Request another frame of the animation
        requestAnimationFrame(animate);
        }

        // Start the animation loop
        animate();
    </script>
  </body>
</html>
