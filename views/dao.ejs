<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />

    <title>otnode.com</title>
    <meta content="" name="description" />
    <meta content="" name="keywords" />

    <!-- Favicons -->
    <link href="images/favicon.png" rel="icon" />
    <link href="images/apple-touch-icon.png" rel="apple-touch-icon" />

    <!-- Google Fonts -->
    <link
      href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
      rel="stylesheet"
    />

    <!-- Vendor CSS Files -->
    <link href="/vendor/aos/aos.css" rel="stylesheet" />
    <link href="/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet" />
    <link href="/vendor/boxicons/css/boxicons.min.css" rel="stylesheet" />
    <link href="/vendor/glightbox/css/glightbox.min.css" rel="stylesheet" />
    <link href="/vendor/remixicon/remixicon.css" rel="stylesheet" />
    <link href="/vendor/swiper/swiper-bundle.min.css" rel="stylesheet" />

    <!-- Template Main CSS File -->
    <link href="/public/stylesheets/style.css" rel="stylesheet" />
    <link rel="stylesheet" href="/stylesheets/style.css" type="text/css" />
    <link rel="stylesheet" href="/stylesheets/style.scss" type="text/css" />
    <link rel="stylesheet" href="/javascripts/main.js" type="text/css" />

    <!-- =======================================================
  * Template Name: OnePage - v4.7.0
  * Template URL: https://bootstrapmade.com/onepage-multipurpose-bootstrap-template/
  * Author: BootstrapMade.com
  * License: https://bootstrapmade.com/license/
  ======================================================== -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    let member_nodes = '<%- locals.member_nodes %>'
    let proposal_header = '<%- locals.proposal_header %>'
    let vote_header = '<%- locals.vote_header %>'
    let owner = '<%- locals.owner_address %>'
    let pubKey = '<%- locals.pubKey %>'
    let privKey = '<%- locals.privKey %>'

    console.log(JSON.parse(proposal_header))

    let owner_address = localStorage.getItem('owner_address');
    let chain_id = localStorage.getItem('chain_id');
  </script>
  </head>

  <body>
    <!-- ======= Header ======= -->
    <header style="background: none;">
      <div class="d-flex align-items-center justify-content-between" style="padding-top:10px;">
        <a href="/search" style="color: #6168ed;margin-left:2.5%;font-size:28px;font-family: OCR A Std, monospace;">otnode.com</a>
        <div class="form-group" style="margin-left: 80px;">
          <div class="input-group" style="white-space:nowrap;" id="searchbar">

          </div>
        </div>

        <nav id="navbar" class="navbar">
          <ul>
            <li id="MM">

            </li>
            <li id="explore">

            </li>
          </ul>
        </nav>
        <!-- .navbar -->
      </div>
    </header>
    <html>
  </body>
    </html>
    <!-- End Header -->
    <main id="main" style="height: calc(90vh);">

      <section id="hero" style="height:100%;">
        <div id="dashboard">
          <div id="row1" class="d-flex"></div>
          <div id="row2" class="d-flex"></div>


        </div>

      </section>
      <!-- <form id="owner_login_form" action="/isok/account" method="GET">
        <input type="text" name="ual" id="ual" style="display:none;" value=""></input>
      </form> -->
      <form id="post_publish_refresh" action="/alliance/dao" method="POST">
        <input type="text" name="keywords" id="_keywords" style="display:none;" value=""></input>
        <input type="text" name="ual" id="_ual" style="display:none;" value=""></input>
        <!--<input type="text" name="account_ual" id="_account_ual" style="display:none;" value=""></input>-->
        <input type="text" name="epochs" id="_epochs" style="display:none;" value=""></input>
        <input type="text" name="owner_address" id="_owner_address" style="display:none;" value=""></input>
        <input type="text" name="txn_id" id="_txn_id" style="display:none;" value=""></input>
        <input type="text" name="assertionId" id="_assertionId" style="display:none;" value=""></input>
        <input type="text" name="operationId" id="_operationId" style="display:none;" value=""></input>
        <input type="text" name="fee" id="_fee" style="display:none;" value=""></input>
        <input type="text" name="assetData" id="_assetData" style="display:none;" value=""></input>
        <input type="text" name="proposal_type" id="_proposal_type" style="display:none;" value=""></input>
        <input type="text" name="action" id="_action" style="display:none;" value=""></input>
        <input type="text" name="proposal_ual" id="_proposal_ual" style="display:none;" value=""></input>
        <input type="text" name="voting_power" id="_voting_power" style="display:none;" value=""></input>
      </form>
      <form id="first_sign_refresh" action="/alliance/dao" method="GET">
        <input type="text" name="owner_address" id="owner_address" style="display:none;" value=""></input>
      </form>
    </main>
    <!-- End #main -->

    <!-- ======= Footer ======= -->
    <!-- <footer style="position: fixed; bottom: 0; width: 100%;background:none;">
      <div class="container d-md-flex py-4">

        </div>
      </div>
    </footer> -->
    <!-- End Footer -->

    <!-- Vendor JS Files -->
    <script src="vendor/purecounter/purecounter.js"></script>
    <script src="vendor/aos/aos.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="vendor/glightbox/js/glightbox.min.js"></script>
    <script src="vendor/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="vendor/swiper/swiper-bundle.min.js"></script>
    <script src="vendor/php-email-form/validate.js"></script>

    <!-- Template Main JS File -->
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="/javascripts/dao.js"></script>
    <script>
      nav(owner_address, chain_id);

      render_page(proposal_header,vote_header,member_nodes, owner,owner_address);

      build_active_proposals(proposal_header);

      if(vote_header){
        vote_list(vote_header);
      }

      proposal_view();

      function showLoadingCircle() {
        const loadingContainer = document.createElement("div");
        loadingContainer.setAttribute("id", "loading-container");
        loadingContainer.style.display = "flex";
        loadingContainer.style.flexDirection = "column";
        loadingContainer.style.alignItems = "center";
        loadingContainer.style.justifyContent = "center";

        const loadingText = document.createElement("p");
        loadingText.textContent = "Submitting Proposal...";
        loadingText.style.fontSize = "20px";
        loadingText.style.fontWeight = "bold";
        loadingText.style.color = "#6168ED";
        loadingContainer.appendChild(loadingText);

        const loadingCircleContainer = document.createElement("div");
        loadingCircleContainer.style.marginTop = "20px";
        const loadingCircle = document.createElement("div");
        loadingCircle.setAttribute("id", "loading-circle");
        loadingCircleContainer.appendChild(loadingCircle);
        loadingContainer.appendChild(loadingCircleContainer);

        document.body.appendChild(loadingContainer);
      }

      function showLoadingCircleVote() {
        const loadingContainer = document.createElement("div");
        loadingContainer.setAttribute("id", "loading-container");
        loadingContainer.style.display = "flex";
        loadingContainer.style.flexDirection = "column";
        loadingContainer.style.alignItems = "center";
        loadingContainer.style.justifyContent = "center";

        const loadingText = document.createElement("p");
        loadingText.textContent = "Submitting Vote...";
        loadingText.style.fontSize = "20px";
        loadingText.style.fontWeight = "bold";
        loadingText.style.color = "#6168ED";
        loadingContainer.appendChild(loadingText);

        const loadingCircleContainer = document.createElement("div");
        loadingCircleContainer.style.marginTop = "20px";
        const loadingCircle = document.createElement("div");
        loadingCircle.setAttribute("id", "loading-circle");
        loadingCircleContainer.appendChild(loadingCircle);
        loadingContainer.appendChild(loadingCircleContainer);

        document.body.appendChild(loadingContainer);
      }

      function showLoadingCircleGet(ual) {
        const loadingContainer = document.createElement("div");
        loadingContainer.setAttribute("id", "loading-container");
        loadingContainer.style.display = "flex";
        loadingContainer.style.flexDirection = "column";
        loadingContainer.style.alignItems = "center";
        loadingContainer.style.justifyContent = "center";

        const loadingText = document.createElement("p");
        loadingText.textContent = `Verifying Proposal Integrity...`;
        loadingText.style.fontSize = "20px";
        loadingText.style.fontWeight = "bold";
        loadingText.style.color = "#6168ED";
        loadingContainer.appendChild(loadingText);

        const loadingCircleContainer = document.createElement("div");
        loadingCircleContainer.style.marginTop = "20px";
        const loadingCircle = document.createElement("div");
        loadingCircle.setAttribute("id", "loading-circle");
        loadingCircleContainer.appendChild(loadingCircle);
        loadingContainer.appendChild(loadingCircleContainer);

        document.body.appendChild(loadingContainer);
      }

      function hideLoadingCircle() {
        const loadingContainer = document.getElementById("loading-container");
        document.body.removeChild(loadingContainer);
      }

      function hideLoadingCircleGet() {
        const loadingContainer = document.getElementById("loading-container");
        document.body.removeChild(loadingContainer);
      }
    </script>
    <script>
      function change_owner_button(type) {
        document.getElementById(type).checked = 'checked';
        if(type == 'host'){
            build_active_proposals(proposal_header);
            var new_hostbutton=`<button type="button" id="host_button" onclick="change_owner_button('host')" style="border-radius:5px 0px 0px 5px;background-color:#6168ED;padding:3px 10px;font-size:12px;border:none;">Active</button>`;
            var new_selfbutton=`<button type="button" id="self_button" onclick="change_owner_button('self')" style="border-radius:0px 5px 5px 0px;background-color:#ffffff;color:#6168ED;border: 1px solid #6168ED;padding:3px 10px;font-size:12px;">Closed</button>`;
        }else{
            build_closed_proposals(proposal_header);
            var new_selfbutton=`<button type="button" id="host_button" onclick="change_owner_button('self')" style="border-radius:0px 5px 5px 0px;background-color:#6168ED;padding:3px 10px;font-size:12px;border:none;">Closed</button>`;
            var new_hostbutton=`<button type="button" id="self_button" onclick="change_owner_button('host')" style="border-radius:5px 0px 0px 5px;background-color:#ffffff;color:#6168ED;border: 1px solid #6168ED;padding:3px 10px;font-size:12px;">Active</button>`;
        }

        document.getElementById("host_button").remove();
        document.getElementById("self_button").remove();
        $('#owner_buttons').append(new_hostbutton);
        $('#owner_buttons').append(new_selfbutton);
        }

        if(document.getElementById('host')){
          if(document.getElementById('host').checked == 'checked'){
          var new_selfbutton=`<button type="button" id="host_button" onclick="change_owner_button('host')" style="border-radius:5px 0px 0px 5px;background-color:#6168ED;padding:3px 10px;font-size:12px;border:none;">Closed</button>`;
              var new_hostbutton=`<button type="button" id="self_button" onclick="change_owner_button('self')" style="border-radius:0px 5px 5px 0px;background-color:#ffffff;color:#6168ED;border: 1px solid #6168ED;padding:3px 10px;font-size:12px;">Active</button>`;
              $('#owner_buttons').append(new_hostbutton);
              $('#owner_buttons').append(new_selfbutton);
          }else{
              var new_hostbutton=`<button type="button" id="host_button" onclick="change_owner_button('host')" style="border-radius:5px 0px 0px 5px;background-color:#6168ED;padding:3px 10px;font-size:12px;border:none;">Active</button>`;
              var new_selfbutton=`<button type="button" id="self_button" onclick="change_owner_button('self')" style="border-radius:0px 5px 5px 0px;background-color:#ffffff;color:#6168ED;border: 1px solid #6168ED;padding:3px 10px;font-size:12px;">Closed</button>`;

              $('#owner_buttons').append(new_hostbutton);
              $('#owner_buttons').append(new_selfbutton);
          }
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
    <script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js" type="application/javascript"></script>
    <script src="/dkg.js/dist/dkg.min.js"></script>
    <script>
      async function load_proposal (ual) {
        try{
          let activeChainId;
          activeChainId = localStorage.getItem("activeChainId")

          if (!activeChainId){
                  console.log("No active chain id.")
                  document.getElementById("invalid_chain").style.display = "block";
                  return;
              }

              if (activeChainId === '0x4fce'){
                  chain = `otp::testnet`
                  ot_node_hostname = `https://www.otnode.com`
                  node_port= `8900`
              }

              if (activeChainId === '20430'){
                  chain = `otp::mainnet`
                  ot_node_hostname = `https://www.otnode.com`
                  node_port= `8901`
              }

          voting_power = 0
          member_nodes = JSON.parse(member_nodes)
          for (i = 0; i < member_nodes.length; ++i) {
            node = member_nodes[i]
            if(node.node_owner.toLowerCase() === owner_address.toLowerCase()){
              //voting_power = voting_power + 1
              stake = Number(node.stake)
              voting_power = voting_power + stake
            }
          }
          
          const options = {
                endpoint: ot_node_hostname,
                port: node_port,
                maxNumberOfRetries: 30,
                useSSL: true
              }

          showLoadingCircleGet(ual);

          const DkgClient = new DKG(options);

          console.log("client initialized")
          console.log(ual)

          const proposalData = await DkgClient.asset.get(ual,{
              validate: true,
              state: 'LATEST_FINALIZED',
              contentType: 'all',
              maxNumberOfRetries: 30,
              frequency: 1,
              blockchain: {
                name: chain,
                publicKey: pubKey,
                privateKey: privKey
              }
            });

          console.log(proposalData)

          proposal = [];

          console.log(`ASSERTIONS: ${proposalData.public.assertion.length}`);

          for (i = 0; i < proposalData.public.assertion.length; ++i) {
            current_assertion = proposalData.public.assertion[i];
            if (current_assertion["@type"]) {
              console.log(`CURRENT ASSERTION: ${current_assertion["@type"][0]}`);

              if (current_assertion["@type"][0] == "http://schema.org/Proposal") {
                console.log(current_assertion);
                proposal.push(current_assertion["@id"]);
              }
            }
          }

          console.log(`Proposal Assertion Index: ${proposal}`);

          for (x = 0; x < proposalData.public.assertion.length; ++x) {
            current_assertion = proposalData.public.assertion[x];

            if (proposal.includes(current_assertion["@id"], 0)) {
              description = current_assertion["http://schema.org/description"][0]["@value"];
              name = current_assertion["http://schema.org/name"][0]["@value"];
              proposedAsk = current_assertion["http://schema.org/proposedAsk"][0]["@value"];
              proposedBy = current_assertion["http://schema.org/proposedBy"][0]["@value"];
              proposedTo = current_assertion["http://schema.org/proposedTo"][0]["@value"];
              reason = current_assertion["http://schema.org/reason"][0]["@value"];
              subjectOf = current_assertion["http://schema.org/subjectOf"][0]["@value"];
              url = current_assertion["http://schema.org/url"][0]["@value"];

              // for (i = 0; i < current_assertion["http://schema.org/inventory"].length;++i) {
              //   item_id = current_assertion["http://schema.org/inventory"][i]["@id"];
              //   inventory.push(item_id);
              // }
              // console.log(`Inventory Done`);

              // for (i = 0;i < current_assertion["http://schema.org/knowledge"].length;++i) {
              //   knowledge_id = current_assertion["http://schema.org/knowledge"][i]["@id"];
              //   knowledge.push(knowledge_id);
              // }
              // console.log(`knowledge Done`);

              // if (current_assertion["http://schema.org/explores"]) {
              //   for (i = 0;i < current_assertion["http://schema.org/explores"].length;++i) {
              //     explore_id = current_assertion["http://schema.org/explores"][i]["@id"];
              //     explores.push(explore_id);
              //   }
              //   console.log(`equipment Done`);
              // }

              // if (current_assertion["http://schema.org/treks"]) {
              //   for (i = 0;i < current_assertion["http://schema.org/treks"].length;++i) {
              //     trek_id = current_assertion["http://schema.org/treks"][i]["@id"];
              //     treks.push(trek_id);
              //   }
              //   console.log(`treks Done`);
              // }
            }
          }

          console.log(description)
          console.log(name)
          console.log(proposedAsk)
          console.log(proposedBy)
          console.log(proposedTo)
          console.log(reason)
          console.log(subjectOf)
          console.log(url)

          view_proposal_elements = `
                      <p style="color:#13B785;margin-right:10px;float:right;font-size:18px;font-family: OCR A Std, monospace;margin-top:-2.2rem;"><i class="ri-check-double-line" style="color:#13B785;padding-right:3px;"></i>VERIFIED</p>
                      <span class="title" style="text-align:left;color:#6168ed;font-family: OCR A Std, monospace;">${name}</span>
                      <br>
                      <br>
                      <span class="title" style="text-align:left;color:#6168ed;font-family: OCR A Std, monospace;">Proposed Ask: ${proposedAsk}</span>
                      <br>
                      <br>
                      <span class="title" style="text-align:left;color:#6168ed;font-family: OCR A Std, monospace;font-size:20px;">Description:</span>
                      <br>
                      <span class="title" style="text-align:left;color:#6168ed;font-family: OCR A Std, monospace;font-size:16px;">${description}</span>
                      <br>
                      <br>
                      <span class="title" style="text-align:left;color:#6168ed;font-family: OCR A Std, monospace;font-size:20px;">Reasoning:</span>
                      <div style="background-color: #ffffff;border-radius: 10px;border: 1px solid #6168ED;height:12rem;width:100%;">
                        <div class="scrollbar" id="style-default" style="width:97%;height:96%;margin-top:1%;">
                          <span class="title" style="text-align:left;color:#6168ed;font-family: OCR A Std, monospace;font-size:16px;">${reason}</span>
                        </div>
                      </div>
                  `

      vote_area = `
                    <span style="text-align:left;color:#6168ed;margin-top:-3.5rem;width:95%;margin-left:2.5%;font-size:18px;font-family: OCR A Std, monospace;"><b>Voting Power:</b> ${voting_power}</span>
                            <input type="text" name="type" id="type" style="display:none;" value="vote"></input>
                            <span style="font-weight: 400;margin-bottom:-1.4rem;margin-left:21.5%;font-size:22px;font-family: OCR A Std, monospace;display:none;font-size:12px;color:red;" id="invalid_json">Invalid JSON</span>
                            <span style="font-weight: 400;margin-bottom:-1.4rem;margin-left:21.5%;font-size:22px;font-family: OCR A Std, monospace;display:none;font-size:12px;color:red;" id="invalid_chain">Invalid Chain</span>
                            <span style="font-weight: 400;margin-bottom:-1.4rem;margin-left:21.5%;font-size:22px;font-family: OCR A Std, monospace;display:none;font-size:12px;color:red;" id="already_voted">Youve already voted in this proposal.</span>
                            <div type="submit" class="mint_button" id="yesButton" style="margin-left:15%;margin-top:3%;font-family: OCR A Std, monospace;width:70%;height:2.5rem;padding-top:3px;padding-left:18px;" onclick="sendVote('${ual}','yes','${voting_power}')">
                                <p class="title" style="text-align:center;font-size:22px;font-family: OCR A Std, monospace;">Yes</p>
                            </div>
                            <div type="submit" class="mint_button" id="noButton" style="margin-left:15%;margin-top:3%;font-family: OCR A Std, monospace;width:70%;height:2.5rem;padding-top:3px;padding-left:18px;" onclick="sendVote('${ual}','no','${voting_power}')">
                                <p class="title" style="text-align:center;font-size:22px;font-family: OCR A Std, monospace;">No</p>
                            </div>`

          $('#vote_area').empty()
          $('#vote_area').append(vote_area)

          $('#view_proposal_elements').empty()
          $('#view_proposal_elements').append(view_proposal_elements)

          hideLoadingCircleGet();
        }catch(e){
          console.log(e)
          view_proposal_elements = `
                      <span class="title" style="text-align:center;color:#red;font-family: OCR A Std, monospace;">Unable to verify proposal integrity!</span>
                      <br><br>
                      <span class="title" style="text-align:center;color:#red;font-family: OCR A Std, monospace;">${e}</span>
                  `

      vote_area = ``

          $('#vote_area').empty()
          $('#vote_area').append(vote_area)

          $('#view_proposal_elements').empty()
          $('#view_proposal_elements').append(view_proposal_elements)

          hideLoadingCircleGet();
        }
}

    </script>
    <script src="/javascripts/metamask.js"></script>
    <script>
      async function sendVote(ual, vote_decision, voting_power){
        try{
            getAccountRefresh();

            let activeChainId;
            let txn_id;
            let keywords;
            let type;
            let chain;
            
            keywords = `${ual}, vote, dao, otnodedotcom, alliance`
            activeChainId = localStorage.getItem("activeChainId")
            type = document.getElementById("type").value
            action = "vote"

            user_vote_history = [];
            vote_header = JSON.parse(vote_header)
            for (i = 0; i < vote_header.length; ++i) {
              vote_record = vote_header[i]
              console.log(`VOTE RECORD: ${JSON.stringify(vote_record)}`)
              if(vote_record.voter.toLowerCase() === owner_address.toLowerCase()){
                user_vote_history.push(vote_record);
              }
            }

            for (i = 0; i < user_vote_history.length; ++i) {
              vote_record = user_vote_history[i]
              if(vote_record.proposal_ual.toLowerCase() === ual.toLowerCase()){
                console.log("Youve already voted in this proposal.")
                document.getElementById("already_voted").style.display = "block";
                document.getElementById("noButton").style.display = "none";
                document.getElementById("yesButton").style.display = "none";
                return;
              }
            }
            
            if (!activeChainId){
                console.log("No active chain id.")
                document.getElementById("invalid_chain").style.display = "block";
                return;
            }

            if (activeChainId === '0x4fce'){
                chain = `otp::testnet`
                ot_node_hostname = `https://www.otnode.com`
                node_port= `8900`
            }

            if (activeChainId === '20430'){
                chain = `otp::mainnet`
                ot_node_hostname = `https://www.otnode.com`
                node_port= `8901`
            }

            if(!chain){
              console.log(`Unsupported network: ${activeChainId}`)
              document.getElementById("invalid_chain").style.display = "block";
              return;
            }

            showLoadingCircleVote();

            yes_vote = 0
            no_vote = 0
            if(vote_decision == 'yes'){
              yes_vote = voting_power
            }

            if(vote_decision == 'no'){
              no_vote = voting_power
            }

            voteData ={
                    "@context": "https://schema.org",
                    "@type": "VoteAction",
                    "voter": `${owner_address}`,
                    "proposal": `${ual}`,
                    "votes":{
                        "yes": `${yes_vote}`,
                        "no": `${no_vote}`
                    },
                    "url": "https://www.otnode.com/alliance/dao",
                    "subjectOf": "otnodedotcom"
                  }

            publishOptions= {
                  epochsNum: 1,
                  maxNumberOfRetries: 30,
                  frequency: 1,
                  keywords: keywords,
                  blockchain : {
                      name: chain,
                  },
                  contentType: 'all'
              }

          const options = {
              endpoint: ot_node_hostname,
              port: node_port,
              useSSL: true
          };

          window.DkgClient = new DKG(options);
          console.log("client initialized")

          console.log(`Vote Data: ${JSON.stringify(voteData)}`)
          voteAssetResult = await DkgClient.asset.create({
                  public: voteData,
                },publishOptions)
                    .then(result => {
                        console.log(result)
                        return result;
                    })
                    .catch(error => {
                      console.log(error)
                    });

            document.getElementById("_proposal_type").value = vote_decision;
            document.getElementById("_keywords").value = keywords;
            document.getElementById("_fee").value = 'Suggested';
            document.getElementById("_epochs").value = 1;
            document.getElementById("_ual").value = voteAssetResult.UAL;
            document.getElementById("_proposal_ual").value = ual;
            document.getElementById("_voting_power").value = voting_power;
            document.getElementById("_assertionId").value = voteAssetResult.publicAssertionId;
            document.getElementById("_operationId").value = voteAssetResult.operationId;
            document.getElementById("_assetData").value = JSON.stringify(voteData);
            document.getElementById("_action").value = action;
            document.getElementById("_owner_address").value = owner_address;
            document.getElementById("post_publish_refresh").submit();   
        }catch(e){
          console.log(e)
          hideLoadingCircle();
        }
      }
  </script>
  <script>
    async function sendProposal(){
      try{
          showLoadingCircle();
          getAccountRefresh();

          let activeChainId;
          let keywords;
          let proposal_type;
          let chain;
          let owner_address;

          owner_address = localStorage.getItem('owner_address');
          activeChainId = localStorage.getItem("activeChainId")
          action = "propose"

          already_proposed = 'no'
          if(proposal_header){
            for (i = 0; i < proposal_header.length;++i) {
              proposal = proposal_header[i];

              if(proposal.proposer == owner_address){
                already_proposed = 'yes'
              }
            }
          }

          if(already_proposed == 'yes'){
            console.log("User already has active proposal.")
            document.getElementById("already_proposed").style.display = "block";
            return;
          }

          if (!activeChainId){
              console.log("No active chain id.")
              document.getElementById("invalid_chain").style.display = "block";
              return;
          }

          if (activeChainId === '0x4fce'){
              chain = `otp::testnet`
              ot_node_hostname = `https://www.otnode.com`
              node_port= `8900`
          }

          if (activeChainId === '20430'){
              chain = `otp::mainnet`
              ot_node_hostname = `https://www.otnode.com`
              node_port= `8901`
          }

          if(!chain){
            console.log(`Unsupported network: ${activeChainId}`)
            document.getElementById("invalid_chain").style.display = "block";
            return;
          }
          
          keywords = `proposal, dao, otnodedotcom, alliance`
          proposal_type = document.getElementById("proposal_type").value

          if(proposal_type == 'ask_change_proposal'){
            proposed_ask = document.getElementById("proposed_ask").value
            reason = document.getElementById("reason").value

            proposalData ={
                "@context": "https://schema.org",
                "@type": "Proposal",
                "name": `Ask Proposal: ${owner_address.substring(
                    0,
                    10
                  )}`,
                "description": `A proposal to change the ask of the otnodedot.com Perpetual Ask Asset.`,
                "proposedBy": `${owner_address}`,
                "proposedTo": "otnodedotcom",
                "url": "https://www.otnode.com/alliance/dao",
                "subjectOf": "OTNode Alliance DAO",
                "proposedAsk": `${proposed_ask}`,
                "reason": `${reason}`
              }
          }

          if(proposal_type == 'generic_proposal'){
            title = document.getElementById("title").value
            details = document.getElementById("details").value

            proposalData ={
                "@context": "https://schema.org",
                "@type": "Proposal",
                "name": `${title}`,
                "description": `A non-ask proposal to implment a change to the otnode.com Alliance.`,
                "proposedBy": `${owner_address}`,
                "proposedTo": "otnodedotcom",
                "url": "https://www.otnode.com/alliance/dao",
                "subjectOf": "OTNode Alliance DAO",
                "details": `${details}`
              }            
          }

          function isJsonString(str) {
                try {
                    JSON.parse(str);
                } catch (e) {
                    return 'false';
                }
                return 'true';
            }

            valid_json = await isJsonString(JSON.stringify(proposalData));
            if(valid_json == 'false'){
              console.log(`Invalid JSON.`)
              return
            }

            publishOptions= {
                epochsNum: 1,
                maxNumberOfRetries: 30,
                frequency: 1,
                keywords: keywords,
                blockchain : {
                    name: chain,
                },
                contentType: 'all'
            }

        const options = {
            endpoint: ot_node_hostname,
            port: node_port,
            useSSL: true
        };

        window.DkgClient = new DKG(options);
        console.log("client initialized")

        proposalAssetResult = await DkgClient.asset.create({
          public: proposalData,
        },publishOptions)
            .then(result => {
                //console.log(result)
                return result;
            })
            .catch(error => {
              console.log(error)
            });

        document.getElementById("_proposal_type").value = proposal_type;
        document.getElementById("_keywords").value = keywords;
        document.getElementById("_fee").value = 'Suggested';
        document.getElementById("_epochs").value = 1;
        document.getElementById("_ual").value = proposalAssetResult.UAL;
        document.getElementById("_assertionId").value = proposalAssetResult.publicAssertionId;
        document.getElementById("_operationId").value = proposalAssetResult.operationId;
        document.getElementById("_assetData").value = JSON.stringify(proposalData);
        document.getElementById("_action").value = action;
        document.getElementById("_owner_address").value = owner_address;
        document.getElementById("post_publish_refresh").submit();  
      }catch(e){
        hideLoadingCircle();
      }
    }
</script>
  </body>
</html>
