<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />

    <title>otnode.com</title>
    <meta content="" name="description" />
    <meta content="" name="keywords" />

    <!-- Favicons -->
    <link href="images/favicon.png" rel="icon" />
    <link href="images/apple-touch-icon.png" rel="apple-touch-icon" />

    <!-- Google Fonts -->
    <link
      href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
      rel="stylesheet"
    />

   <!-- Vendor CSS Files -->
   <link href="/vendor/aos/aos.css" rel="stylesheet" />
   <link href="/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
   <link href="/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet" />
   <link href="/vendor/boxicons/css/boxicons.min.css" rel="stylesheet" />
   <link href="/vendor/glightbox/css/glightbox.min.css" rel="stylesheet" />
   <link href="/vendor/remixicon/remixicon.css" rel="stylesheet" />
   <link href="/vendor/swiper/swiper-bundle.min.css" rel="stylesheet" />

   <!-- Template Main CSS File -->
   <link href="/public/stylesheets/style.css" rel="stylesheet" />
   <link rel="stylesheet" href="/stylesheets/style.css" type="text/css" />
   <link rel="stylesheet" href="/stylesheets/style.scss" type="text/css" />
   <link rel="stylesheet" href="/javascripts/main.js" type="text/css" />

    <!-- =======================================================
  * Template Name: OnePage - v4.7.0
  * Template URL: https://bootstrapmade.com/onepage-multipurpose-bootstrap-template/
  * Author: BootstrapMade.com
  * License: https://bootstrapmade.com/license/
  ======================================================== -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <!--<script src="javascripts/bundle.js"></script>-->
  <!--<script src="javascripts/provider.js "></script>-->
  <script>
    let api_key = '<%- locals.api_key %>'
    let owner = '<%- locals.owner_address %>'
    let owner_address = localStorage.getItem('owner_address');
    let chain_id = localStorage.getItem('chain_id');

    console.log('txn_owner: '+owner)
    console.log('metamask owner: '+owner_address);
  </script>
  </head>

  <body>
    <!-- ======= Header ======= -->
    <header style="background: none;">
      <div class="d-flex align-items-center justify-content-between" style="padding-top:10px;">
        <a href="/search" style="color: #6168ed;margin-left:2.5%;font-size:28px;font-family: OCR A Std, monospace;">otnode.com</a>
        <div class="form-group" style="margin-left: 80px;">
          <div class="input-group" style="white-space:nowrap;" id="searchbar">

          </div>
        </div>

        <nav id="navbar" class="navbar">
          <ul>
            <li id="MM">

            </li>
            <li id="explore">

            </li>
          </ul>
        </nav>
        <!-- .navbar -->
      </div>
    </header>
    <html>
  <body><div class="area">

  </div>
        
  </body>
    </html>
    <!-- End Header -->
    <main id="main" style="height: calc(100vh - 85px)">

      <section id="hero" style="height: calc(100vh - 85px)">
        <div id="dashboard">
          <div id="row1" class="d-flex"></div>
          <div id="row2" class="d-flex"></div>


        </div>

      </section>
      <form id="post_publish_refresh" action="/apiPortal" method="POST">
        <input type="text" name="keywords" id="_keywords" style="display:none;" value=""></input>
        <input type="text" name="ual" id="_ual" style="display:none;" value=""></input>
        <input type="text" name="epochs" id="_epochs" style="display:none;" value=""></input>
        <input type="text" name="owner_address" id="_owner_address" style="display:none;" value='<%- locals.owner_address %>'></input>
        <input type="text" name="txn_id" id="_txn_id" style="display:none;" value=""></input>
        <input type="text" name="assertionId" id="_assertionId" style="display:none;" value=""></input>
        <input type="text" name="operationId" id="_operationId" style="display:none;" value=""></input>
        <input type="text" name="fee" id="_fee" style="display:none;" value=""></input>
      </form>
      <form id="first_sign_refresh" action="/isok/isokTransactions" method="GET">
        <input type="text" name="owner_address" id="owner_address" style="display:none;" value=""></input>
      </form>
    </main>
    <!-- End #main -->

    <!-- ======= Footer ======= -->
    <footer id="footer" style="position: fixed; bottom: 0; width: 100%">
      <div class="container d-md-flex py-4">

        </div>
      </div>
    </footer>
    <!-- End Footer -->

    <!-- Vendor JS Files -->
    <script src="vendor/purecounter/purecounter.js"></script>
    <script src="vendor/aos/aos.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="vendor/glightbox/js/glightbox.min.js"></script>
    <script src="vendor/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="vendor/swiper/swiper-bundle.min.js"></script>
    <script src="vendor/php-email-form/validate.js"></script>

    <!-- Template Main JS File -->

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js" type="application/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
    <script src="javascripts/main.js"></script>
    <script src="javascripts/apiPortal.js"></script>
    <script>
      nav(owner_address, chain_id);
      if(owner != owner_address){
        blank_page();
      }else{
        body(owner_address,chain_id);
        
        if(`<%- locals.api_txns %>`){
              build_api_txns(`<%- JSON.stringify(locals.api_txns) %>`,`<%- JSON.stringify(locals.api_data) %>`);
          }

          if(api_key){
              var x = document.getElementById("generateKey");
              x.style.display = "none";

              api_key_info =`
              <h4 class="title" id="api_key name="api_key" style="text-align:center;color:#13B785;font-family: OCR A Std, monospace;padding-top:9rem;font-size:20px;">${'<%- locals.api_key %>'}</h4>
              <form action="/generateKey" method="POST">
                  <input type="text" name="owner_address" id="owner_address" style="display:none;" value="${'<%- locals.owner_address %>'}"></input>
                  <input type="text" name="chain_id" id="chain_id" style="display:none;" value="${chain_id}"></input>
                  <button type="submit" class="menu_tile" style="height:3rem;width:80%;margin-left:10%;margin-right:10%;margin-top:1rem;">
                  <p class="title" style="text-align:center;font-size:22px;font-family: OCR A Std, monospace;padding-top:.25rem;" onclick="">Regenerate Api Key</p>
                  </button>
              </form>
              `
              $('#api_key_created').append(api_key_info);
          }
      }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
    <script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js" type="application/javascript"></script>
    <script src="dkg.js/dist/dkg.min.js"></script>
    <script>
        async function sendPublish(){
          try{
              document.getElementById("sendButton").style.display = "none";
              document.getElementById("rejectButton").style.display = "none";
              document.getElementById("viewButton").style.display = "none";

              let activeChainId;
              let txn_id;
              let keywords;
              let fee;
              let epochs;
              let assetData;
              let chain;
              
              activeChainId = localStorage.getItem("activeChainId")
              txn_id = document.getElementById("txn_id").value
              keywords = document.getElementById("keywords").value
              fee = document.getElementById("trac_fee").value
              epochs = document.getElementById("epochs").value
              
              function isJsonString(str) {
                  try {
                      JSON.parse(str);
                  } catch (e) {
                      return 'false';
                  }
                  return 'true';
              }
            
              valid_json = await isJsonString(document.getElementById("txn_data").value);
              if(valid_json == 'false'){
                console.log(`Invalid JSON.`)
                document.getElementById("invalid_json").style.display = "block";
                return
              }

              document.getElementById("invalid_json").style.display = "none";
              assetData = JSON.parse(document.getElementById("txn_data").value)
            
              if (!activeChainId){
                  console.log("No active chain id.")
                  document.getElementById("invalid_chain").style.display = "block";
                  return;
              }

              if (activeChainId === '0x4fce'){
                  chain = `otp::testnet`
                  ot_node_hostname = `https://www.otnode.com`
                  node_port= `8900`
              }

              if (activeChainId === '20430'){
                  chain = `otp::mainnet`
                  ot_node_hostname = `https://www.otnode.com`
                  node_port= `8901`
              }

              if(!chain){
                console.log(`Unsupported network: ${activeChainId}`)
                document.getElementById("invalid_chain").style.display = "block";
                return;
              }

              if(!keywords){
                keywords = `otnodedotcom`
              }else{
                keywords = keywords.replace("'", "");
                keywords = keywords.replace('"', "");
                keywords = keywords + ",otnodedotcom";
              }

              if(!epochs){
                epochs = 2
              }

              if(!fee){
                publishOptions= {
                    epochsNum: epochs,
                    maxNumberOfRetries: 30,
                    frequency: 1,
                    keywords: keywords,
                    blockchain : {
                        name: chain,
                    },
                  contentType: 'all'
                }
              }else{
                publishOptions= {
                    epochsNum: epochs,
                    maxNumberOfRetries: 30,
                    frequency: 1,
                    tokenAmount: ethers.utils.parseEther(fee),
                    keywords: keywords,
                    blockchain : {
                        name: chain,
                    },
                  contentType: 'all'
                }
              }

            const options = {
                endpoint: ot_node_hostname,
                port: node_port
            };

            window.DkgClient = new DKG(options);
            console.log("client initialized")

          minted_asset = await DkgClient.asset.create({
            public: assetData,
          },publishOptions)
              .then(result => {
                  console.log({ assertionId: result.assertionId, UAL: result.UAL })
                  return result;
              })
              .catch(error => {
                console.log(error)
              });
            
            document.getElementById("_txn_id").value = txn_id;
            document.getElementById("_keywords").value = keywords;
            document.getElementById("_fee").value = fee;
            document.getElementById("_epochs").value = epochs;
            document.getElementById("_ual").value = minted_asset.UAL;
            document.getElementById("_assertionId").value = minted_asset.assertionId;
            document.getElementById("_operationId").value = minted_asset.operationId;
            //document.getElementById("_owner_address").value = owner_address;
            document.getElementById("post_publish_refresh").submit();
          }catch(e){
            document.getElementById("sendButton").style.display = "block";
              document.getElementById("rejectButton").style.display = "block";
              document.getElementById("viewButton").style.display = "block";
          }
          
        
        }
    </script>
    <!-- <script>
      async function sendUpdate(){
        let activeChainId;
        let txn_id;
        let keywords;
        let fee;
        let epochs;
        let assetData;
        let chain;
        let ual;

        activeChainId = localStorage.getItem("activeChainId")
        txn_id = document.getElementById("txn_id").value
        keywords = document.getElementById("keywords").value
        fee = document.getElementById("trac_fee").value
        epochs = document.getElementById("epochs").value
        ual = document.getElementById("_ual").value

        function isJsonString(str) {
              try {
                  JSON.parse(str);
              } catch (e) {
                  return 'false';
              }
              return 'true';
          }
        
          valid_json = await isJsonString(document.getElementById("txn_data").value);
          if(valid_json == 'false'){
            console.log(`Invalid JSON.`)
            document.getElementById("invalid_json").style.display = "block";
            return
          }

          document.getElementById("invalid_json").style.display = "none";
          assetData = JSON.parse(document.getElementById("txn_data").value)
      
          if (!activeChainId){
              console.log("No active chain id.")
              document.getElementById("invalid_chain").style.display = "block";
              return;
          }

          if (activeChainId === '0x4fce'){
              chain = `otp::testnet`
              ot_node_hostname = `https://www.otnode.com`
              node_port= `8900`
          }

          if (activeChainId === '20430'){
              chain = `otp::mainnet`
              ot_node_hostname = `https://www.blockheart.com`
              node_port= `8900`
          }

          if(!chain){
            console.log(`Unsupported network: ${activeChainId}`)
            document.getElementById("invalid_chain").style.display = "block";
            return;
          }

        if(!keywords){
          keywords = `otnodedotcom`
        }else{
          keywords = keywords.replace("'", "");
          keywords = keywords.replace('"', "");
          keywords = keywords + ",otnodedotcom";
        }

        if(!epochs){
          epochs = 2
        }

        if(!fee){
          publishOptions= {
              epochsNum: epochs,
              maxNumberOfRetries: 30,
              frequency: 1,
              keywords: keywords,
              blockchain : {
                  name: chain,
              }
          }
        }else{
          publishOptions= {
              epochsNum: epochs,
              maxNumberOfRetries: 30,
              frequency: 1,
              tokenAmount: ethers.utils.parseEther(fee),
              keywords: keywords,
              blockchain : {
                  name: chain,
              }
          }
        }

      const options = {
          endpoint: ot_node_hostname,
          port: node_port,
          useSSL: false,
      };

      window.DkgClient = new DKG(options);
      console.log("client initialized")

      minted_asset = await DkgClient.asset.update(ual, assetData,publishOptions)
          .then(result => {
              console.log({ assertionId: result.assertionId, UAL: result.UAL })
              return result;
          });
      
      //     $('#_txn_id').empty();
      // $('#_keywords').empty();
      // $('#_fee').empty();
      // $('#_epochs').empty();
      // $('#_ual').empty();
      // $('#_assertionId').empty();
      // $('#_operationId').empty();
      // $('#_owner_address').empty();

      document.getElementById("_txn_id").value = txn_id;
      document.getElementById("_keywords").value = keywords;
      document.getElementById("_fee").value = fee;
      document.getElementById("_epochs").value = epochs;
      document.getElementById("_ual").value = minted_asset.UAL;
      document.getElementById("_assertionId").value = minted_asset.assertionId;
      document.getElementById("_operationId").value = minted_asset.operationId;
      //document.getElementById("_owner_address").value = owner_address;
      document.getElementById("post_publish_refresh").submit();       
      }
  </script> -->
  <script>
    async function reject(){
      document.getElementById("_keywords").value = "";
      document.getElementById("_fee").value = "";
      document.getElementById("_epochs").value = "";
      document.getElementById("_ual").value = "rejected";
      document.getElementById("_assertionId").value = "";
      document.getElementById("_operationId").value = "";
      //document.getElementById("_owner_address").value = owner_address;
      document.getElementById("post_publish_refresh").submit();    
    }
  </script>
  <script src="/javascripts/metamask.js"></script>
  </body>
</html>
